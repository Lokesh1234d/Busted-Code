import boto3
from botocore.exceptions import ClientError

def send_email(sender, recipient, subject, body):
    # Create an SES client
    ses_client = boto3.client('ses')
    
    # Send email
    try:
        response = ses_client.send_email(
            Source=sender,
            Destination={
                'ToAddresses': [recipient]
            },
            Message={
                'Subject': {
                    'Data': subject
                },
                'Body': {
                    'Text': {
                        'Data': body
                    }
                }
            }
        )
    except ClientError as e:
        print(f"Error sending email: {e.response['Error']['Message']}")
        return False
    else:
        print(f"Email sent! Message ID: {response['MessageId']}")
        return True

def lambda_handler(event, context):
    # Create an S3 client
    s3_client = boto3.client('s3')
    
    # List all S3 buckets
    response = s3_client.list_buckets()
    
    # Initialize the report body
    report_body = "S3 Report:\n\n"
    
    # Iterate through each bucket
    for bucket in response['Buckets']:
        bucket_name = bucket['Name']
        
        # Get the bucket's tagging information
        tagging_response = s3_client.get_bucket_tagging(Bucket=bucket_name)
        
        # Check if the bucket has any tags
        if 'TagSet' in tagging_response:
            tags = tagging_response['TagSet']
            has_tags = True
        else:
            has_tags = False
        
        # Get the bucket's creation information
        creation_response = s3_client.get_bucket_acl(Bucket=bucket_name)
        creator = creation_response['Owner']['DisplayName']
        
        report_body += f"Bucket: {bucket_name}\n"
        report_body += f"Created by: {creator}\n"
        report_body += f"Has tags: {has_tags}\n"
        report_body += "---\n"
    
    # Send the report via email
    sender = 'your-email@example.com'
    recipient = 'recipient-email@example.com'
    subject = 'S3 Report'
    
    if send_email(sender, recipient, subject, report_body):
        return {
            'statusCode': 200,
            'body': 'S3 report sent successfully.'
        }
    else:
        return {
            'statusCode': 500,
            'body': 'Failed to send S3 report.'
        }
